{"ast":null,"code":"export function stripTime(timeValue) {\n  return new Date(timeValue).setHours(0, 0, 0, 0);\n}\nexport function today() {\n  return new Date().setHours(0, 0, 0, 0);\n}\n\n// Get the time value of the start of given date or year, month and day\nexport function dateValue(...args) {\n  switch (args.length) {\n    case 0:\n      return today();\n    case 1:\n      return stripTime(args[0]);\n  }\n\n  // use setFullYear() to keep 2-digit year from being mapped to 1900-1999\n  const newDate = new Date(0);\n  newDate.setFullYear(...args);\n  return newDate.setHours(0, 0, 0, 0);\n}\nexport function addDays(date, amount) {\n  const newDate = new Date(date);\n  return newDate.setDate(newDate.getDate() + amount);\n}\nexport function addWeeks(date, amount) {\n  return addDays(date, amount * 7);\n}\nexport function addMonths(date, amount) {\n  // If the day of the date is not in the new month, the last day of the new\n  // month will be returned. e.g. Jan 31 + 1 month → Feb 28 (not Mar 03)\n  const newDate = new Date(date);\n  const monthsToSet = newDate.getMonth() + amount;\n  let expectedMonth = monthsToSet % 12;\n  if (expectedMonth < 0) {\n    expectedMonth += 12;\n  }\n  const time = newDate.setMonth(monthsToSet);\n  return newDate.getMonth() !== expectedMonth ? newDate.setDate(0) : time;\n}\nexport function addYears(date, amount) {\n  // If the date is Feb 29 and the new year is not a leap year, Feb 28 of the\n  // new year will be returned.\n  const newDate = new Date(date);\n  const expectedMonth = newDate.getMonth();\n  const time = newDate.setFullYear(newDate.getFullYear() + amount);\n  return expectedMonth === 1 && newDate.getMonth() === 2 ? newDate.setDate(0) : time;\n}\n\n// Calculate the distance bettwen 2 days of the week\nfunction dayDiff(day, from) {\n  return (day - from + 7) % 7;\n}\n\n// Get the date of the specified day of the week of given base date\nexport function dayOfTheWeekOf(baseDate, dayOfWeek, weekStart = 0) {\n  const baseDay = new Date(baseDate).getDay();\n  return addDays(baseDate, dayDiff(dayOfWeek, weekStart) - dayDiff(baseDay, weekStart));\n}\n\n// Get the ISO week of a date\nexport function getWeek(date) {\n  // start of ISO week is Monday\n  const thuOfTheWeek = dayOfTheWeekOf(date, 4, 1);\n  // 1st week == the week where the 4th of January is in\n  const firstThu = dayOfTheWeekOf(new Date(thuOfTheWeek).setMonth(0, 4), 4, 1);\n  return Math.round((thuOfTheWeek - firstThu) / 604800000) + 1;\n}\n\n// Get the start year of the period of years that includes given date\n// years: length of the year period\nexport function startOfYearPeriod(date, years) {\n  /* @see https://en.wikipedia.org/wiki/Year_zero#ISO_8601 */\n  const year = new Date(date).getFullYear();\n  return Math.floor(year / years) * years;\n}","map":{"version":3,"names":["stripTime","timeValue","Date","setHours","today","dateValue","args","length","newDate","setFullYear","addDays","date","amount","setDate","getDate","addWeeks","addMonths","monthsToSet","getMonth","expectedMonth","time","setMonth","addYears","getFullYear","dayDiff","day","from","dayOfTheWeekOf","baseDate","dayOfWeek","weekStart","baseDay","getDay","getWeek","thuOfTheWeek","firstThu","Math","round","startOfYearPeriod","years","year","floor"],"sources":["/home/ouakeds/playground/node_modules/flowbite-datepicker/js/lib/date.js"],"sourcesContent":["export function stripTime(timeValue) {\n  return new Date(timeValue).setHours(0, 0, 0, 0);\n}\n\nexport function today() {\n  return new Date().setHours(0, 0, 0, 0);\n}\n\n// Get the time value of the start of given date or year, month and day\nexport function dateValue(...args) {\n  switch (args.length) {\n    case 0:\n      return today();\n    case 1:\n      return stripTime(args[0]);\n  }\n\n  // use setFullYear() to keep 2-digit year from being mapped to 1900-1999\n  const newDate = new Date(0);\n  newDate.setFullYear(...args);\n  return newDate.setHours(0, 0, 0, 0);\n}\n\nexport function addDays(date, amount) {\n  const newDate = new Date(date);\n  return newDate.setDate(newDate.getDate() + amount);\n}\n\nexport function addWeeks(date, amount) {\n  return addDays(date, amount * 7);\n}\n\nexport function addMonths(date, amount) {\n  // If the day of the date is not in the new month, the last day of the new\n  // month will be returned. e.g. Jan 31 + 1 month → Feb 28 (not Mar 03)\n  const newDate = new Date(date);\n  const monthsToSet = newDate.getMonth() + amount;\n  let expectedMonth = monthsToSet % 12;\n  if (expectedMonth < 0) {\n    expectedMonth += 12;\n  }\n\n  const time = newDate.setMonth(monthsToSet);\n  return newDate.getMonth() !== expectedMonth ? newDate.setDate(0) : time;\n}\n\nexport function addYears(date, amount) {\n  // If the date is Feb 29 and the new year is not a leap year, Feb 28 of the\n  // new year will be returned.\n  const newDate = new Date(date);\n  const expectedMonth = newDate.getMonth();\n  const time = newDate.setFullYear(newDate.getFullYear() + amount);\n  return expectedMonth === 1 && newDate.getMonth() === 2 ? newDate.setDate(0) : time;\n}\n\n// Calculate the distance bettwen 2 days of the week\nfunction dayDiff(day, from) {\n  return (day - from + 7) % 7;\n}\n\n// Get the date of the specified day of the week of given base date\nexport function dayOfTheWeekOf(baseDate, dayOfWeek, weekStart = 0) {\n  const baseDay = new Date(baseDate).getDay();\n  return addDays(baseDate, dayDiff(dayOfWeek, weekStart) - dayDiff(baseDay, weekStart));\n}\n\n// Get the ISO week of a date\nexport function getWeek(date) {\n  // start of ISO week is Monday\n  const thuOfTheWeek = dayOfTheWeekOf(date, 4, 1);\n  // 1st week == the week where the 4th of January is in\n  const firstThu = dayOfTheWeekOf(new Date(thuOfTheWeek).setMonth(0, 4), 4, 1);\n  return Math.round((thuOfTheWeek - firstThu) / 604800000) + 1;\n}\n\n// Get the start year of the period of years that includes given date\n// years: length of the year period\nexport function startOfYearPeriod(date, years) {\n  /* @see https://en.wikipedia.org/wiki/Year_zero#ISO_8601 */\n  const year = new Date(date).getFullYear();\n  return Math.floor(year / years) * years;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}