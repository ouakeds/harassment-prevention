{"ast":null,"code":"import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useId, useState } from 'react';\nimport { HiChevronDown } from 'react-icons/hi';\nimport { twMerge } from 'tailwind-merge';\nimport { Tooltip, useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { useSidebarContext } from './SidebarContext';\nimport { SidebarItemContext } from './SidebarItemContext';\nexport const SidebarCollapse = ({\n  children,\n  className,\n  icon: Icon,\n  label,\n  chevronIcon: ChevronIcon = HiChevronDown,\n  renderChevronIcon,\n  open = false,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const id = useId();\n  const {\n    isCollapsed\n  } = useSidebarContext();\n  const [isOpen, setOpen] = useState(open);\n  const theme = mergeDeep(useTheme().theme.sidebar.collapse, customTheme);\n  useEffect(() => setOpen(open), [open]);\n  const Wrapper = ({\n    children\n  }) => _jsx(\"li\", {\n    children: isCollapsed && !isOpen ? _jsx(Tooltip, {\n      content: label,\n      placement: \"right\",\n      children: children\n    }) : children\n  });\n  return _jsxs(Wrapper, {\n    children: [_jsxs(\"button\", {\n      id: `flowbite-sidebar-collapse-${id}`,\n      onClick: () => setOpen(!isOpen),\n      title: label,\n      type: \"button\",\n      className: twMerge(theme.button, className),\n      ...props,\n      children: [Icon && _jsx(Icon, {\n        \"aria-hidden\": true,\n        \"data-testid\": \"flowbite-sidebar-collapse-icon\",\n        className: twMerge(theme.icon.base, theme.icon.open[isOpen ? 'on' : 'off'])\n      }), isCollapsed ? _jsx(\"span\", {\n        className: \"sr-only\",\n        children: label\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(\"span\", {\n          \"data-testid\": \"flowbite-sidebar-collapse-label\",\n          className: theme.label.base,\n          children: label\n        }), renderChevronIcon ? renderChevronIcon(theme, isOpen) : _jsx(ChevronIcon, {\n          \"aria-hidden\": true,\n          className: twMerge(theme.label.icon.base, theme.label.icon.open[isOpen ? 'on' : 'off'])\n        })]\n      })]\n    }), _jsx(\"ul\", {\n      \"aria-labelledby\": `flowbite-sidebar-collapse-${id}`,\n      hidden: !isOpen,\n      className: theme.list,\n      children: _jsx(SidebarItemContext.Provider, {\n        value: {\n          isInsideCollapse: true\n        },\n        children: children\n      })\n    })]\n  });\n};\nSidebarCollapse.displayName = 'Sidebar.Collapse';","map":{"version":3,"names":["jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","useEffect","useId","useState","HiChevronDown","twMerge","Tooltip","useTheme","mergeDeep","useSidebarContext","SidebarItemContext","SidebarCollapse","children","className","icon","Icon","label","chevronIcon","ChevronIcon","renderChevronIcon","open","theme","customTheme","props","id","isCollapsed","isOpen","setOpen","sidebar","collapse","Wrapper","content","placement","onClick","title","type","button","base","hidden","list","Provider","value","isInsideCollapse","displayName"],"sources":["/home/ouakeds/playground/node_modules/flowbite-react/lib/esm/components/Sidebar/SidebarCollapse.js"],"sourcesContent":["import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useId, useState } from 'react';\nimport { HiChevronDown } from 'react-icons/hi';\nimport { twMerge } from 'tailwind-merge';\nimport { Tooltip, useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { useSidebarContext } from './SidebarContext';\nimport { SidebarItemContext } from './SidebarItemContext';\nexport const SidebarCollapse = ({ children, className, icon: Icon, label, chevronIcon: ChevronIcon = HiChevronDown, renderChevronIcon, open = false, theme: customTheme = {}, ...props }) => {\n    const id = useId();\n    const { isCollapsed } = useSidebarContext();\n    const [isOpen, setOpen] = useState(open);\n    const theme = mergeDeep(useTheme().theme.sidebar.collapse, customTheme);\n    useEffect(() => setOpen(open), [open]);\n    const Wrapper = ({ children }) => (_jsx(\"li\", { children: isCollapsed && !isOpen ? (_jsx(Tooltip, { content: label, placement: \"right\", children: children })) : (children) }));\n    return (_jsxs(Wrapper, { children: [_jsxs(\"button\", { id: `flowbite-sidebar-collapse-${id}`, onClick: () => setOpen(!isOpen), title: label, type: \"button\", className: twMerge(theme.button, className), ...props, children: [Icon && (_jsx(Icon, { \"aria-hidden\": true, \"data-testid\": \"flowbite-sidebar-collapse-icon\", className: twMerge(theme.icon.base, theme.icon.open[isOpen ? 'on' : 'off']) })), isCollapsed ? (_jsx(\"span\", { className: \"sr-only\", children: label })) : (_jsxs(_Fragment, { children: [_jsx(\"span\", { \"data-testid\": \"flowbite-sidebar-collapse-label\", className: theme.label.base, children: label }), renderChevronIcon ? (renderChevronIcon(theme, isOpen)) : (_jsx(ChevronIcon, { \"aria-hidden\": true, className: twMerge(theme.label.icon.base, theme.label.icon.open[isOpen ? 'on' : 'off']) }))] }))] }), _jsx(\"ul\", { \"aria-labelledby\": `flowbite-sidebar-collapse-${id}`, hidden: !isOpen, className: theme.list, children: _jsx(SidebarItemContext.Provider, { value: { isInsideCollapse: true }, children: children }) })] }));\n};\nSidebarCollapse.displayName = 'Sidebar.Collapse';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}