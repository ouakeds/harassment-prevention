{"ast":null,"code":"export var Views;\n(function (Views) {\n  Views[Views[\"Days\"] = 0] = \"Days\";\n  Views[Views[\"Months\"] = 1] = \"Months\";\n  Views[Views[\"Years\"] = 2] = \"Years\";\n  Views[Views[\"Decades\"] = 3] = \"Decades\";\n})(Views || (Views = {}));\nexport var WeekStart;\n(function (WeekStart) {\n  WeekStart[WeekStart[\"Saturday\"] = 0] = \"Saturday\";\n  WeekStart[WeekStart[\"Sunday\"] = 1] = \"Sunday\";\n  WeekStart[WeekStart[\"Monday\"] = 2] = \"Monday\";\n})(WeekStart || (WeekStart = {}));\nexport const isDateInRange = (date, minDate, maxDate) => {\n  const dateTime = new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime();\n  if (minDate && maxDate) {\n    const minDateTime = new Date(minDate.getFullYear(), minDate.getMonth(), minDate.getDate()).getTime();\n    const maxDateTime = new Date(maxDate.getFullYear(), maxDate.getMonth(), maxDate.getDate()).getTime();\n    return dateTime >= minDateTime && dateTime <= maxDateTime;\n  }\n  if (minDate) {\n    const minDateTime = new Date(minDate.getFullYear(), minDate.getMonth(), minDate.getDate()).getTime();\n    return dateTime >= minDateTime;\n  }\n  if (maxDate) {\n    const maxDateTime = new Date(maxDate.getFullYear(), maxDate.getMonth(), maxDate.getDate()).getTime();\n    return dateTime <= maxDateTime;\n  }\n  return true;\n};\nexport const isDateEqual = (date, selectedDate) => {\n  date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  selectedDate = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  return date.getTime() === selectedDate.getTime();\n};\nexport const getFirstDateInRange = (date, minDate, maxDate) => {\n  if (!isDateInRange(date, minDate, maxDate)) {\n    if (minDate && date < minDate) {\n      date = minDate;\n    } else if (maxDate && date > maxDate) {\n      date = maxDate;\n    }\n  }\n  return date;\n};\nexport const getFirstDayOfTheMonth = (date, weekStart) => {\n  const firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\n  const dayOfWeek = firstDayOfMonth.getDay();\n  const diff = (dayOfWeek - weekStart + 7) % 7;\n  return addDays(firstDayOfMonth, -diff);\n};\nexport const getWeekDays = (lang, weekStart) => {\n  const weekdays = [];\n  const date = new Date();\n  const formatter = new Intl.DateTimeFormat(lang, {\n    weekday: 'short'\n  });\n  for (let i = 0; i < 7; i++) {\n    const dayIndex = (i + weekStart + 1) % 7; // Calculate the correct day index based on weekStart\n    date.setDate(dayIndex + 1);\n    const formattedWeekday = formatter.format(date);\n    weekdays.push(formattedWeekday.slice(0, 2).charAt(0).toUpperCase() + formattedWeekday.slice(1, 3));\n  }\n  return weekdays;\n};\nexport const addDays = (date, amount) => {\n  const newDate = new Date(date);\n  newDate.setDate(newDate.getDate() + amount);\n  return newDate;\n};\nexport const addMonths = (date, amount) => {\n  const newDate = new Date(date);\n  newDate.setMonth(newDate.getMonth() + amount);\n  return newDate;\n};\nexport const addYears = (date, amount) => {\n  const newDate = new Date(date);\n  newDate.setFullYear(newDate.getFullYear() + amount);\n  return newDate;\n};\nexport const getFormattedDate = (language, date, options) => {\n  let defaultOptions = {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  };\n  if (options) {\n    defaultOptions = options;\n  }\n  return new Intl.DateTimeFormat(language, defaultOptions).format(date);\n};\nexport const startOfYearPeriod = (date, years) => {\n  const year = date.getFullYear();\n  return Math.floor(year / years) * years;\n};\nexport const isDateInDecade = (date, startYear) => {\n  const year = date.getFullYear();\n  const endYear = startYear + 9;\n  return year >= startYear && year <= endYear;\n};\nexport const isDateRangeInDecade = (startDate, endDate, decadeStart, decadeEnd) => {\n  const startYear = startDate.getFullYear();\n  const endYear = endDate.getFullYear();\n  if (decadeStart && decadeEnd) {\n    // Check if the start and end years of the date range are within the decade\n    const isStartYearInRange = isDateInRange(new Date(startYear, 0, 1), new Date(decadeStart, 0, 1), new Date(decadeEnd, 11, 31));\n    const isEndYearInRange = isDateInRange(new Date(endYear, 11, 31), new Date(decadeStart, 0, 1), new Date(decadeEnd, 11, 31));\n    return isStartYearInRange && isEndYearInRange;\n  }\n  // If decadeStart or decadeEnd is not provided, treat it as an open-ended range\n  return true;\n};","map":{"version":3,"names":["Views","WeekStart","isDateInRange","date","minDate","maxDate","dateTime","Date","getFullYear","getMonth","getDate","getTime","minDateTime","maxDateTime","isDateEqual","selectedDate","getFirstDateInRange","getFirstDayOfTheMonth","weekStart","firstDayOfMonth","dayOfWeek","getDay","diff","addDays","getWeekDays","lang","weekdays","formatter","Intl","DateTimeFormat","weekday","i","dayIndex","setDate","formattedWeekday","format","push","slice","charAt","toUpperCase","amount","newDate","addMonths","setMonth","addYears","setFullYear","getFormattedDate","language","options","defaultOptions","day","month","year","startOfYearPeriod","years","Math","floor","isDateInDecade","startYear","endYear","isDateRangeInDecade","startDate","endDate","decadeStart","decadeEnd","isStartYearInRange","isEndYearInRange"],"sources":["/home/ouakeds/playground/node_modules/flowbite-react/lib/esm/components/Datepicker/helpers.js"],"sourcesContent":["export var Views;\n(function (Views) {\n    Views[Views[\"Days\"] = 0] = \"Days\";\n    Views[Views[\"Months\"] = 1] = \"Months\";\n    Views[Views[\"Years\"] = 2] = \"Years\";\n    Views[Views[\"Decades\"] = 3] = \"Decades\";\n})(Views || (Views = {}));\nexport var WeekStart;\n(function (WeekStart) {\n    WeekStart[WeekStart[\"Saturday\"] = 0] = \"Saturday\";\n    WeekStart[WeekStart[\"Sunday\"] = 1] = \"Sunday\";\n    WeekStart[WeekStart[\"Monday\"] = 2] = \"Monday\";\n})(WeekStart || (WeekStart = {}));\nexport const isDateInRange = (date, minDate, maxDate) => {\n    const dateTime = new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime();\n    if (minDate && maxDate) {\n        const minDateTime = new Date(minDate.getFullYear(), minDate.getMonth(), minDate.getDate()).getTime();\n        const maxDateTime = new Date(maxDate.getFullYear(), maxDate.getMonth(), maxDate.getDate()).getTime();\n        return dateTime >= minDateTime && dateTime <= maxDateTime;\n    }\n    if (minDate) {\n        const minDateTime = new Date(minDate.getFullYear(), minDate.getMonth(), minDate.getDate()).getTime();\n        return dateTime >= minDateTime;\n    }\n    if (maxDate) {\n        const maxDateTime = new Date(maxDate.getFullYear(), maxDate.getMonth(), maxDate.getDate()).getTime();\n        return dateTime <= maxDateTime;\n    }\n    return true;\n};\nexport const isDateEqual = (date, selectedDate) => {\n    date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n    selectedDate = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n    return date.getTime() === selectedDate.getTime();\n};\nexport const getFirstDateInRange = (date, minDate, maxDate) => {\n    if (!isDateInRange(date, minDate, maxDate)) {\n        if (minDate && date < minDate) {\n            date = minDate;\n        }\n        else if (maxDate && date > maxDate) {\n            date = maxDate;\n        }\n    }\n    return date;\n};\nexport const getFirstDayOfTheMonth = (date, weekStart) => {\n    const firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\n    const dayOfWeek = firstDayOfMonth.getDay();\n    const diff = (dayOfWeek - weekStart + 7) % 7;\n    return addDays(firstDayOfMonth, -diff);\n};\nexport const getWeekDays = (lang, weekStart) => {\n    const weekdays = [];\n    const date = new Date();\n    const formatter = new Intl.DateTimeFormat(lang, { weekday: 'short' });\n    for (let i = 0; i < 7; i++) {\n        const dayIndex = (i + weekStart + 1) % 7; // Calculate the correct day index based on weekStart\n        date.setDate(dayIndex + 1);\n        const formattedWeekday = formatter.format(date);\n        weekdays.push(formattedWeekday.slice(0, 2).charAt(0).toUpperCase() + formattedWeekday.slice(1, 3));\n    }\n    return weekdays;\n};\nexport const addDays = (date, amount) => {\n    const newDate = new Date(date);\n    newDate.setDate(newDate.getDate() + amount);\n    return newDate;\n};\nexport const addMonths = (date, amount) => {\n    const newDate = new Date(date);\n    newDate.setMonth(newDate.getMonth() + amount);\n    return newDate;\n};\nexport const addYears = (date, amount) => {\n    const newDate = new Date(date);\n    newDate.setFullYear(newDate.getFullYear() + amount);\n    return newDate;\n};\nexport const getFormattedDate = (language, date, options) => {\n    let defaultOptions = {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric',\n    };\n    if (options) {\n        defaultOptions = options;\n    }\n    return new Intl.DateTimeFormat(language, defaultOptions).format(date);\n};\nexport const startOfYearPeriod = (date, years) => {\n    const year = date.getFullYear();\n    return Math.floor(year / years) * years;\n};\nexport const isDateInDecade = (date, startYear) => {\n    const year = date.getFullYear();\n    const endYear = startYear + 9;\n    return year >= startYear && year <= endYear;\n};\nexport const isDateRangeInDecade = (startDate, endDate, decadeStart, decadeEnd) => {\n    const startYear = startDate.getFullYear();\n    const endYear = endDate.getFullYear();\n    if (decadeStart && decadeEnd) {\n        // Check if the start and end years of the date range are within the decade\n        const isStartYearInRange = isDateInRange(new Date(startYear, 0, 1), new Date(decadeStart, 0, 1), new Date(decadeEnd, 11, 31));\n        const isEndYearInRange = isDateInRange(new Date(endYear, 11, 31), new Date(decadeStart, 0, 1), new Date(decadeEnd, 11, 31));\n        return isStartYearInRange && isEndYearInRange;\n    }\n    // If decadeStart or decadeEnd is not provided, treat it as an open-ended range\n    return true;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}